const express = require('express');

const app = express();
const PORT = 3000;

/**************************************
 * Load packages to support the server
 **************************************/
const createError = require("http-errors"); // handle server errors
const path = require('path'); // refer to local paths
const cookieParser = require('cookie-parser'); // handle cookies
const session = require('express-session'); // handle sessions using cookies
const bodyParser = require('body-parser') // handle HTML from input
const debug = require('debug')('personalapp:server');
const layouts = require('express-ejs-layouts');

/*************************
 * connect to the database
 *************************/
const mongoose = require('mongoose');
const mongodb_URI = 'mongodb://localhost:27017/bunnybearbao'
mongoose.connect(mongodb_URI, { useNewUrlParser: true} );
const db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function(){ console.log("Success! Connected to mongoDB")});

//it specifies that the app will be using EJS as our view engine
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// this allows us to use page layout for the views 
// so we don't have to repeat the headers and footers on every page ...
// the layout is in views/layout.ejs
app.use(layouts);

// Here we process the requests so they are easy to handle
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

// Here we specify that static files will be in the public folder
app.use(express.static(path.join(__dirname, "public")));

// Here we enable session handling using cookies
app.use(
  session({
    secret: "zzbbyanana789sdfa8f9ds8f90ds87f8d9s789fds", // this ought to be hidden in process.env.SECRET
    resave: false,
    saveUninitialized: false
  })
);

/*****************************************************
* Defining the routes the Express server will respond to
******************************************************/
// app.get('/test', (req, res)=>{
//     res.status(200);
//     res.send("Welcome to BunnyBearBao, a market for home-grown food and handcrafts!")
// })

// here is the code which handles all /login /signin /logout routes
const auth = require('./routes/auth');
app.use(auth)

// middleware to test is the user is logged in, and if not, send them to the login page
const isLoggedIn = (req,res,next) => {
  if (res.locals.loggedIn) {
    next()
  }
  else res.redirect('/login')
}

// specify that the server should render the views/index.ejs page for the root path
// and the index.ejs code will be wrapped in the views/layouts.ejs code which provides
// the headers and footers for all webpages generated by this app
app.get("/", (req, res) => {
  res.render("index");
});

app.get('/about', (req, res)=> {
	res.render('about');
})

app.get('/myorder', (req, res)=> {
	res.render('myorder');
})

app.listen(PORT, (error) =>{
	if(!error)
		console.log("Success! App is running on port " + PORT);
	else
        console.log("Error!! ", error);	
	}
);
